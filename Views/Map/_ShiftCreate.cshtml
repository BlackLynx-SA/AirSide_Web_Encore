@using AirSide.ServerModules.Models
<!--Modal for add Technician Shift-->
<div class="modal fade" id="shiftModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    &times;
                </button>
                <h4 class="modal-title" id="techModalLabel"></h4>
            </div>
            <div class="modal-body">
                <form class="smart-form">
                    <div class="row">
                        <fieldset>
                            <section class="col col-6">
                                <label class="label">Select a date</label>
                                <label class="input">
                                    <i class="fa fa-calendar icon-prepend"></i>
                                    <input type="text" id="shiftdate" placeholder="Select a date" class="form-control datepicker" data-dateformat="dd/mm/yy" style="z-index:1051;">
                                </label>
                            </section>
                            <section class="col col-6">
                                <label class="label">Time of shift</label>
                                <label class="input">
                                    <i class="fa fa-clock-o icon-prepend"></i>
                                    <input class="form-control" id="timepicker" type="text" placeholder="Select time" style="background:#fff;">
                                </label>
                            </section>
                        </fieldset>
                    </div>
                    <div class="row">
                        <fieldset>
                            <section class="col col-6">
                                <label class="label">Technician Group</label>
                                <label class="select">
                                    @Html.DropDownList("techgroups", null, String.Empty)<i></i>
                                </label>
                                <div class="note"><strong><i class="fa fa-lightbulb-o"></i> Info:</strong> This list contains all the technician groups loaded. To view all click <a href="~/users/techniciangroups">here.</a></div>
                            </section>
                            <section class="col col-6">
                                <label class="label">Maintenance Task</label>
                                <label class="select">
                                    <select id="shiftTasks">
                                        @foreach (var prod in (List<as_maintenanceProfile>)ViewData["maintenanceTasks"])
                                        {
                                            <option value="@prod.i_maintenanceId">@prod.vc_description</option>
                                        }
                                    </select><i></i>
                                </label>
                                <div class="note"><strong><i class="fa fa-lightbulb-o"></i> Info:</strong> This is the list of all maintenance tasks. To view all click <a href="~/shifts/maintenancetasks">here.</a></div>
                            </section>
                        </fieldset>
                    </div>
                    <div class="row">
                        <fieldset>
                            <section class="col col-6">
                                <label class="label">Work Permit Number</label>
                                <label class="input">
                                    <i class="fa fa-road icon-prepend"></i>
                                    <input class="form-control" id="workpermitTxt" type="text" placeholder="Enter a Work Permit">
                                </label>
                                <div class="note"><strong>Note:</strong> If a permit was issued to go airside, please fill it in.</div>
                            </section>
                            <section class="col col-6">
                                <label class="label">External Reference</label>
                                <label class="input">
                                    <i class="fa fa-magic icon-prepend"></i>
                                    <input class="form-control" id="externalRefTxt" type="text" placeholder="Enter an External Reference">
                                </label>
                                <div class="note"><strong><i class="fa fa-lightbulb-o"></i> Info:</strong> Please supply any external system references here.</div>
                            </section>
                        </fieldset>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <img src="~/Content/img/adb_img/adb_loader_tr.gif" id="shiftLoader" style="height:20px; display:none;" />
                <button class="btn btn-primary" onclick="sendCustomShift()"><i class="fa fa-plus"></i> Add Shift</button>
                <button class="btn btn-danger" onclick="$('#shiftModal').modal('hide');"><i class="fa fa-times"></i> Cancel</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var NELat, NELong, SWLat, SWLong;
    //Shifts Functions
    function showRectangle() {
        if (!rectFlag) {
            var c = map.getCenter();

            var bounds = new google.maps.LatLngBounds(
                new google.maps.LatLng(c.lat() - 0.001, c.lng() - 0.002),
                new google.maps.LatLng(c.lat() + 0.001, c.lng() + 0.002)
              );

            // Define a rectangle and set its editable property to true.
            rectangle = new google.maps.Rectangle({
                bounds: bounds,
                editable: true,
                draggable: true
            });

            rectangle.setMap(map);

            rectFlag = true;

            //enable button
            $('.createShift').removeClass("disabled");

        } else {
            rectangle.setMap(null);
            rectFlag = false;

            //disable creatShift
            $('.createShift').addClass("disabled");
        }
    }

    var selectedAssets = [];

    function getSelectedAssets() {
        selectedAssets = [];

        var selectorNELat = rectangle.bounds.getNorthEast().lat();
        var selectorNELong = rectangle.bounds.getNorthEast().lng();
        var selectorSWLat = rectangle.bounds.getSouthWest().lat();
        var selectorSWLong = rectangle.bounds.getSouthWest().lng();

        //set globals
        NELat = selectorNELat;
        NELong = selectorNELong;
        SWLat = selectorSWLat;
        SWLong = selectorSWLong;

        $.each(markers, function (i, v) {
            var markerLat = 0;
            var markerLong = 0;

            markerLat = v.position.lat();
            markerLong = v.position.lng();

            var latFlag = false;
            var longFlag = false;

            if (markerLat >= selectorSWLat && markerLat <= selectorNELat) latFlag = true;
            if (markerLong >= selectorSWLong && markerLong <= selectorNELong) longFlag = true;

            if (latFlag && longFlag)
                selectedAssets.push(v);
        });

        var assetArray = [];
        $.each(selectedAssets, function (i, v) {
            assetArray.push(v.title);
        });

        if (selectedAssets.length > 0) {
            $('#techModalLabel').html('<i class="fa fa-calendar txt-color-blueDark"></i> Create New Shift for ' + selectedAssets.length + ' assets');
            $('#shiftModal').modal('show');
        }
        else {
            $.smallBox({
                title: "Not Assets",
                content: "Please select assets to create a shift",
                color: "#dfb56c",
                timeout: 4000,
                icon: "fa fa-warning swing animated"
            });
        }
    }

    function sendCustomShift() {
        $('#shiftLoader').fadeIn(300);
        var dateTVal = $('#shiftdate').val();
        var timeVal = $('#timepicker').val();
        var sheduledDate = dateTVal + ' ' + timeVal;
        var techGroup = $('#techgroups').val();
        var maintenance = $('#shiftTasks').val();
        var externalRef = $('#externalRefTxt').val();
        var permitNumber = $('#workpermitTxt').val();
        var maintenanceFilter = selectedTask;
        var _antiforgeryToken = $("input[name='__RequestVerificationToken']").val();

        var data = {
            shift: {
                scheduledDate: sheduledDate,
                techGroupId: techGroup,
                maintenanceId: maintenance,
                permitNumber: permitNumber,
                externalRef: externalRef,
                filterType: filterEnum,
                filterValue: filterValue,
                maintenanceFilter: maintenanceFilter,
                dateRange: "",
                voiceChk: false,
                textChk: false,
                imageChk: false
            },
            bounds:{
                NELat: NELat,
                NELong: NELong,
                SWLat: SWLat,
                SWLong: SWLong,
            },
            __RequestVerificationToken: _antiforgeryToken
        }

        //FilterEnum = 107 Visual Surveyor
        if (filterEnum === 107)
        {
            var fromDate = $('.from').val();
            var toDate = $('.to').val();

            var surveyDate = fromDate + "-" + toDate;
            var voiceChk = $('#voiceChk').prop('checked');
            var textChk = $('#textChk').prop('checked');
            var imageChk = $('#imageChk').prop('checked');

            data = {
                shift: {
                    scheduledDate: sheduledDate,
                    techGroupId: techGroup,
                    maintenanceId: maintenance,
                    permitNumber: permitNumber,
                    externalRef: externalRef,
                    filterType: filterEnum,
                    filterValue: filterValue,
                    maintenanceFilter: maintenanceFilter,
                    dateRange: surveyDate,
                    voiceChk: voiceChk,
                    textChk: textChk,
                    imageChk: imageChk
                },
                bounds: {
                    NELat: NELat,
                    NELong: NELong,
                    SWLat: SWLat,
                    SWLong: SWLong,
                },
                __RequestVerificationToken: _antiforgeryToken
            }
        }

        //Ajax Call
        $.ajax({
            url: '../../Shifts/addCustomShift',
            data: data,
            type: 'post',
            dataType: 'json',
            success: function (json) {
                $.smallBox({
                    title: "Shift Created",
                    content: json.count + " assets were added to this custom shift. You can view all shifts under the Shift Planning section.",
                    color: "#5384AF",
                    timeout: 4000,
                    icon: "fa fa-calendar"
                });
                $('#shiftLoader').fadeOut(300);
                $('#shiftModal').modal('hide');
            },
            error: function (err) {
                    $.smallBox({
                        title: "Error creating custom shift",
                        content: err.responseText,
                        color: "#f51414",
                        timeout: 5000,
                        icon: "fa fa-bell swing animated"
                    });
            }
        });
    }
</script>