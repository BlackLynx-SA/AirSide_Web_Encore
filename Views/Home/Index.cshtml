<!-- MAIN CONTENT -->
<div id="content">
    <div class="row">
        <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
            <h1 class="page-title txt-color-blueDark"><i class="fa-fw fa fa-home"></i> Dashboard <span>> My Dashboard</span></h1>
        </div>
        <div class="col-xs-12 col-sm-5 col-md-5 col-lg-8">
            <ul id="sparks" class="">
                <li class="sparks-info">
                    <h5> Activity <span class="txt-color-blue"> 40 450</span></h5>
                    <div class="sparkline txt-color-blue hidden-mobile hidden-md hidden-sm">
                        1300, 1877, 2500, 2577, 2000, 2100, 3000, 2700, 3631, 2471, 2700, 3631, 2471
                    </div>
                </li>
                <li class="sparks-info">
                    <h5> Site Traffic <span class="txt-color-purple"><i class="fa fa-arrow-circle-up"></i>&nbsp;45%</span></h5>
                    <div class="sparkline txt-color-purple hidden-mobile hidden-md hidden-sm">
                        110,150,300,130,400,240,220,310,220,300, 270, 210
                    </div>
                </li>
                <li class="sparks-info">
                    <h5> New Events <span class="txt-color-greenDark"><i class="fa fa-shopping-cart"></i>&nbsp;2447</span></h5>
                    <div class="sparkline txt-color-greenDark hidden-mobile hidden-md hidden-sm">
                        110,150,300,130,400,240,220,310,220,300, 270, 210
                    </div>
                </li>
            </ul>
        </div>
    </div>
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <!-- row -->
        <div class="row">
            <article class="col-sm-12">
                <!-- new widget -->
                <div class="jarviswidget" id="wid-id-0" data-widget-togglebutton="false" data-widget-editbutton="false" data-widget-fullscreenbutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false">
                    <!-- widget options:
                    usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                    data-widget-colorbutton="false"
                    data-widget-editbutton="false"
                    data-widget-togglebutton="false"
                    data-widget-deletebutton="false"
                    data-widget-fullscreenbutton="false"
                    data-widget-custombutton="false"
                    data-widget-collapsed="true"
                    data-widget-sortable="false"

                    -->
                    <header>
                        <span class="widget-icon"> <i class="glyphicon glyphicon-stats txt-color-darken"></i> </span>
                        <h2>Live Feeds </h2>
                        <ul class="nav nav-tabs pull-right in" id="myTab">
                            <li class="active">
                                <a data-toggle="tab" href="#s1"><i class="fa fa-clock-o"></i> <span class="hidden-mobile hidden-tablet">Live Stats</span></a>
                            </li>
                        </ul>
                    </header>
                    <!-- widget div-->
                    <div class="no-padding">
                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            test
                        </div>
                        <!-- end widget edit box -->
                        <div class="widget-body">
                            <!-- content -->
                            <div id="myTabContent" class="tab-content">
                                <div class="tab-pane fade active in padding-10 no-padding-bottom" id="s1">
                                    <div class="row no-space">
                                        <div class="col-xs-12 col-sm-12 col-md-8 col-lg-8">
                                            <span class="demo-liveupdate-1">
                                                <span class="onoffswitch-title">Live switch</span> <span class="onoffswitch">
                                                    <input type="checkbox" name="start_interval" class="onoffswitch-checkbox" id="start_interval">
                                                    <label class="onoffswitch-label" for="start_interval">
                                                        <span class="onoffswitch-inner" data-swchon-text="ON" data-swchoff-text="OFF"></span>
                                                        <span class="onoffswitch-switch"></span>
                                                    </label>
                                                </span>
                                            </span>
                                            <div id="updating-chart" class="chart-large txt-color-blue"></div>
                                        </div>
                                        <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4 show-stats">
                                            <div class="row">
                                                <div class="col-xs-6 col-sm-6 col-md-12 col-lg-12">
                                                    <span class="text"> My Tasks <span class="pull-right">130/200</span> </span>
                                                    <div class="progress">
                                                        <div class="progress-bar bg-color-blueDark" style="width: 65%;"></div>
                                                    </div>
                                                </div>
                                                <div class="col-xs-6 col-sm-6 col-md-12 col-lg-12">
                                                    <span class="text"> Photmetric Data <span class="pull-right">440 GB</span> </span>
                                                    <div class="progress">
                                                        <div class="progress-bar bg-color-blue" style="width: 34%;"></div>
                                                    </div>
                                                </div>
                                                <div class="col-xs-6 col-sm-6 col-md-12 col-lg-12">
                                                    <span class="text"> Current Shifts<span class="pull-right">77%</span> </span>
                                                    <div class="progress">
                                                        <div class="progress-bar bg-color-blue" style="width: 77%;"></div>
                                                    </div>
                                                </div>
                                                <div class="col-xs-6 col-sm-6 col-md-12 col-lg-12">
                                                    <span class="text"> Surveyor&trade; <span class="pull-right">7 Days</span> </span>
                                                    <div class="progress">
                                                        <div class="progress-bar bg-color-greenLight" style="width: 84%;"></div>
                                                    </div>
                                                </div>
                                                <span class="show-stat-buttons"> <span class="col-xs-12 col-sm-6 col-md-6 col-lg-6"> <a href="javascript:void(0);" class="btn btn-default btn-block hidden-xs">Generate PDF</a> </span> <span class="col-xs-12 col-sm-6 col-md-6 col-lg-6"> <a href="javascript:void(0);" class="btn btn-default btn-block hidden-xs">Report a bug</a> </span> </span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="show-stat-microcharts">
                                        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
                                            <div class="easy-pie-chart txt-color-orangeDark" data-percent="33" data-pie-size="50">
                                                <span class="percent percent-sign">35</span>
                                            </div>
                                            <span class="easy-pie-title"> Tasks Done <i class="fa fa-caret-up icon-color-bad"></i> </span>
                                            <ul class="smaller-stat hidden-sm pull-right">
                                                <li>
                                                    <span class="label bg-color-greenLight"><i class="fa fa-caret-up"></i> 97%</span>
                                                </li>
                                                <li>
                                                    <span class="label bg-color-blueLight"><i class="fa fa-caret-down"></i> 44%</span>
                                                </li>
                                            </ul>
                                            <div class="sparkline txt-color-greenLight hidden-sm hidden-md pull-right" data-sparkline-type="line" data-sparkline-height="33px" data-sparkline-width="70px" data-fill-color="transparent">
                                                130, 187, 250, 257, 200, 210, 300, 270, 363, 247, 270, 363, 247
                                            </div>
                                        </div>
                                        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
                                            <div class="easy-pie-chart txt-color-greenLight" data-percent="78.9" data-pie-size="50">
                                                <span class="percent percent-sign">78.9 </span>
                                            </div>
                                            <span class="easy-pie-title"> Overdue <i class="fa fa-caret-down icon-color-good"></i></span>
                                            <ul class="smaller-stat hidden-sm pull-right">
                                                <li>
                                                    <span class="label bg-color-blueDark"><i class="fa fa-caret-up"></i> 76%</span>
                                                </li>
                                                <li>
                                                    <span class="label bg-color-blue"><i class="fa fa-caret-down"></i> 3%</span>
                                                </li>
                                            </ul>
                                            <div class="sparkline txt-color-blue hidden-sm hidden-md pull-right" data-sparkline-type="line" data-sparkline-height="33px" data-sparkline-width="70px" data-fill-color="transparent">
                                                257, 200, 210, 300, 270, 363, 130, 187, 250, 247, 270, 363, 247
                                            </div>
                                        </div>
                                        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
                                            <div class="easy-pie-chart txt-color-blue" data-percent="23" data-pie-size="50">
                                                <span class="percent percent-sign">23 </span>
                                            </div>
                                            <span class="easy-pie-title"> Shifts <i class="fa fa-caret-up icon-color-good"></i></span>
                                            <ul class="smaller-stat hidden-sm pull-right">
                                                <li>
                                                    <span class="label bg-color-darken">10</span>
                                                </li>
                                                <li>
                                                    <span class="label bg-color-blueDark"><i class="fa fa-caret-up"></i> 10%</span>
                                                </li>
                                            </ul>
                                            <div class="sparkline txt-color-darken hidden-sm hidden-md pull-right" data-sparkline-type="line" data-sparkline-height="33px" data-sparkline-width="70px" data-fill-color="transparent">
                                                200, 210, 363, 247, 300, 270, 130, 187, 250, 257, 363, 247, 270
                                            </div>
                                        </div>
                                        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
                                            <div class="easy-pie-chart txt-color-darken" data-percent="36" data-pie-size="50">
                                                <span class="percent degree-sign">36 <i class="fa fa-caret-up"></i></span>
                                            </div>
                                            <span class="easy-pie-title"> Movement <i class="fa fa-caret-down icon-color-good"></i></span>
                                            <ul class="smaller-stat hidden-sm pull-right">
                                                <li>
                                                    <span class="label bg-color-red"><i class="fa fa-caret-up"></i> 124</span>
                                                </li>
                                                <li>
                                                    <span class="label bg-color-blue"><i class="fa fa-caret-down"></i> 40 F</span>
                                                </li>
                                            </ul>
                                            <div class="sparkline txt-color-red hidden-sm hidden-md pull-right" data-sparkline-type="line" data-sparkline-height="33px" data-sparkline-width="70px" data-fill-color="transparent">
                                                2700, 3631, 2471, 2700, 3631, 2471, 1300, 1877, 2500, 2577, 2000, 2100, 3000
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <!-- end s1 tab pane -->
                            </div>
                            <!-- end content -->
                        </div>
                    </div>
                    <!-- end widget div -->
                </div>
                <!-- end widget -->
            </article>
        </div>
        <!-- end row -->
        <!-- row -->
        <div class="row">
            <article class="col-sm-12 col-md-12 col-lg-6">
                <!-- new widget -->
                <!-- end widget -->
                <!-- new widget -->
                    @{Html.RenderPartial("_CalendarView");}
                <!-- end widget -->
            </article>
            <article class="col-sm-12 col-md-12 col-lg-6">
                <!-- new widget -->
                    @{Html.RenderPartial("_MapView");}
                <!-- end widget -->

                <!-- ToDo Widget -->
                    @{Html.RenderPartial("_ToDoView");}
                <!-- end ToDo Widget -->

            </article>
        </div>
        <!-- end row -->
    </section>
    <!-- end widget grid -->
</div>
<!-- END MAIN CONTENT -->
@section pagespecific {
<script src="~/scripts/plugin/date/date.js"></script>
    <script>
        var todoCategoriesTxt;
        var selectedTask = @ViewBag.firstTask;

        function getTodoCategories() {
            $.ajax({
                type: "POST",
                url: "../../Home/getTodoCategories",
                success: function (json) {
                    var allCategories;
                    $.each(json, function (i, v) {
                        var html = '<h5 class="todo-group-title"><i class="fa ' + v.vc_icon + '"></i> ' + v.vc_description + ' (<small class="num-of-tasks">0</small>)</h5>';
                        html += '<ul id="cat_' + v.i_todoCatId + '" class="todo"></ul>';
                        $('#todoDiv').append(html);

                        if (i === 0)
                            allCategories = '#cat_' + v.i_todoCatId;
                        else
                            allCategories += ', #cat_' + v.i_todoCatId;

                        //Init Sorting
                        $('#cat_' + v.i_todoCatId).sortable({
                            handle: '.handle',
                            connectWith: ".todo",
                            update: countTasks
                        }).disableSelection();

                        todoCategoriesTxt += '[' + v.vc_description + ']';
                    });

                    //Init Completed Tasks
                    var html = '<h5 class="todo-group-title"><i class="fa fa-check"></i> Completed Tasks (<small class="num-of-tasks">0</small>)</h5><ul id="sortable3" class="todo"></ul>';
                    $('#todoDiv').append(html);

                    //Show ToDo
                    $('#todoLoader').hide();
                    $('#todoDiv').fadeIn(500);
                    $("#todoAddBtn").removeClass('disabled');
                    getAllToDos();

                    // initialize sortable
                    $(function () {
                        $(allCategories).sortable({
                            handle: '.handle',
                            connectWith: ".todo",
                            update: countTasks
                        }).disableSelection();
                    });


                }
            });
        }

        function getAllToDos()
        {
            $.ajax({
                type: "POST",
                url: "../../Home/getAllTodos",
                success: function (json) {
                    $.each(json, function (i, v) {
                        insertTodoItem(v);
                    });
                    bindToDo();
                    countTasks();
                }
            });
        }

            // count tasks
            function countTasks() {

                $('.todo-group-title').each(function () {
                    var $this = $(this);
                    $this.find(".num-of-tasks").text($this.next().find("li").size());
                });
            }

            function setTodoStatus(id)
            {
                $.ajax({
                    type: "POST",
                    url: "../../Home/setToDoStatus?todoId=" + id,
                    data: $('<form>@Html.AntiForgeryToken()</form>').serialize(),
                    success: function (json) {

                    }
                });
            }

            function insertTodoItem(json) {
                if (json.bt_active === true) {
                    var html = '<li data-todoid="' + json.i_todoProfileId + '"><span class="handle"><label class="checkbox"><input type="checkbox" name="checkbox-inline"><i></i></label></span>';
                    html += '<p><strong>Item #' + json.i_todoProfileId + '</strong> - ' + json.vc_description + ' <span class="text-muted"></span>';
                    html += '<span class="date">' + json.date + '</span></p></li>';
                    $('#cat_' + json.i_todoCatId).append(html);
                } else {
                    var html = '<li class="complete"><span class="handle" style="display:none"><label class="checkbox state-disabled"><input type="checkbox" name="checkbox-inline" disabled="disabled"><i></i></label></span>';
                    html += '<p><strong>Item #' + json.i_todoProfileId + '</strong> - ' + json.vc_description + ' <span class="text-muted"></span>';
                    html += '<span class="date">' + json.date + '</span></p></li>';
                    $('#sortable3').append(html);
                }
            }

            function addTodo(desc, cat) {
                $.ajax({
                    type: "POST",
                    url: "../../Home/insertNewTodo?description=" + desc + "&category=" + cat,
                    data: $('<form>@Html.AntiForgeryToken()</form>').serialize(),
                    success: function (json) {
                        var alert = '<p>' + json.vc_description + '</p><small>Date ' + json.date + '</small>';
                        $.bigBox({
                            title: "To-Do Item Created",
                            content: alert,
                            color: "#3276B1",
                            timeout: 5000,
                            icon: "fa fa-bell swing animated",
                        });
                        insertTodoItem(json);
                        bindToDo();
                        countTasks();
                    }
                });
            }

            function bindToDo()
            {
                // check and uncheck
                $('.todo .checkbox > input[type="checkbox"]').click(function () {
                    var $this = $(this).parent().parent().parent();
                    var todoId = $this.attr("data-todoid");

                    if ($(this).prop('checked')) {
                        $this.addClass("complete");

                        // remove this if you want to undo a check list once checked
                        $(this).attr("disabled", true);
                        $(this).parent().hide();

                        //update server
                        setTodoStatus(todoId);

                        // once clicked - add class, copy to memory then remove and add to sortable3
                        $this.slideUp(500, function () {
                            $this.clone().prependTo("#sortable3").effect("highlight", {}, 800);
                            $this.remove();
                            countTasks();
                        });
                    } else {
                        // insert undo code here...
                    }

                });
            }

            $(document).ready(function () {
                //Init ToDo
                getTodoCategories();

                //Init Map
                requestAllAssetData();

                //Init Calendar 
                requestAllShifts();

                //init button clicks
                $(document).on('click', '#todoAddBtn', function () {
                    var itemDesc, itemCat;

                    $.SmartMessageBox({
                        title: '<i class="fa fa-check fa-lg txt-color-blue"></i> New To-Do Item',
                        content: "Please enter the item description",
                        buttons: "[Cancel][Accept]",
                        input: "text",
                        inputValue: "",
                        placeholder: "Enter your to-do item"
                    }, function (ButtonPress, Value) {
                        if (ButtonPress == "Cancel") {
                            return 0;
                        }

                        itemDesc = Value;

                        $.SmartMessageBox({
                            title: '<i class="fa fa-list fa-lg txt-color-blue"></i> Select To-Do Category',
                            content: "Please select a category for the new item",
                            buttons: "[Done]",
                            input: "select",
                            options: todoCategoriesTxt,
                        }, function (ButtonPress, Value) {
                            itemCat = Value;
                            addTodo(itemDesc, itemCat);
                        }
                        );


                    });
                });

                $(".js-status-update a").click(function () {
                    var selText = $(this).text();
                    var $this = $(this);
                    $this.parents('.btn-group').find('.dropdown-toggle').html(selText + ' <span class="caret"></span>');
                    $this.parents('.dropdown-menu').find('li').removeClass('active');
                    $this.parent().addClass('active');
                });




                /*
                * RUN PAGE GRAPHS
                */

                /* TAB 1: UPDATING CHART */
                // For the demo we use generated data, but normally it would be coming from the server

                var data = [], totalPoints = 200, $UpdatingChartColors = $("#updating-chart").css('color');

                function getRandomData() {
                    if (data.length > 0)
                        data = data.slice(1);

                    // do a random walk
                    while (data.length < totalPoints) {
                        var prev = data.length > 0 ? data[data.length - 1] : 50;
                        var y = prev + Math.random() * 10 - 5;
                        if (y < 0)
                            y = 0;
                        if (y > 100)
                            y = 100;
                        data.push(y);
                    }

                    // zip the generated y values with the x values
                    var res = [];
                    for (var i = 0; i < data.length; ++i)
                        res.push([i, data[i]])
                    return res;
                }

                // setup control widget
                var updateInterval = 1500;
                $("#updating-chart").val(updateInterval).change(function () {

                    var v = $(this).val();
                    if (v && !isNaN(+v)) {
                        updateInterval = +v;
                        $(this).val("" + updateInterval);
                    }

                });

                // setup plot
                var options = {
                    yaxis: {
                        min: 0,
                        max: 100
                    },
                    xaxis: {
                        min: 0,
                        max: 100
                    },
                    colors: [$UpdatingChartColors],
                    series: {
                        lines: {
                            lineWidth: 1,
                            fill: true,
                            fillColor: {
                                colors: [{
                                    opacity: 0.4
                                }, {
                                    opacity: 0
                                }]
                            },
                            steps: false

                        }
                    }
                };

                var plot = $.plot($("#updating-chart"), [getRandomData()], options);

                /* live switch */
                $('input[type="checkbox"]#start_interval').click(function () {
                    if ($(this).prop('checked')) {
                        $on = true;
                        updateInterval = 1500;
                        update();
                    } else {
                        clearInterval(updateInterval);
                        $on = false;
                    }
                });

                function update() {
                    if ($on == true) {
                        plot.setData([getRandomData()]);
                        plot.draw();
                        setTimeout(update, updateInterval);

                    } else {
                        clearInterval(updateInterval)
                    }

                }

                var $on = false;

                /*end updating chart*/

                /* TAB 2: Social Network  */

                $(function () {
                    // jQuery Flot Chart
                    var twitter = [[1, 27], [2, 34], [3, 51], [4, 48], [5, 55], [6, 65], [7, 61], [8, 70], [9, 65], [10, 75], [11, 57], [12, 59], [13, 62]], facebook = [[1, 25], [2, 31], [3, 45], [4, 37], [5, 38], [6, 40], [7, 47], [8, 55], [9, 43], [10, 50], [11, 47], [12, 39], [13, 47]], data = [{
                        label: "Twitter",
                        data: twitter,
                        lines: {
                            show: true,
                            lineWidth: 1,
                            fill: true,
                            fillColor: {
                                colors: [{
                                    opacity: 0.1
                                }, {
                                    opacity: 0.13
                                }]
                            }
                        },
                        points: {
                            show: true
                        }
                    }, {
                        label: "Facebook",
                        data: facebook,
                        lines: {
                            show: true,
                            lineWidth: 1,
                            fill: true,
                            fillColor: {
                                colors: [{
                                    opacity: 0.1
                                }, {
                                    opacity: 0.13
                                }]
                            }
                        },
                        points: {
                            show: true
                        }
                    }];

                    var options = {
                        grid: {
                            hoverable: true
                        },
                        colors: ["#568A89", "#3276B1"],
                        tooltip: true,
                        tooltipOpts: {
                            //content : "Value <b>$x</b> Value <span>$y</span>",
                            defaultTheme: false
                        },
                        xaxis: {
                            ticks: [[1, "JAN"], [2, "FEB"], [3, "MAR"], [4, "APR"], [5, "MAY"], [6, "JUN"], [7, "JUL"], [8, "AUG"], [9, "SEP"], [10, "OCT"], [11, "NOV"], [12, "DEC"], [13, "JAN+1"]]
                        },
                        yaxes: {

                        }
                    };

                    var plot3 = $.plot($("#statsChart"), data, options);
                });

                // END TAB 2

                // TAB THREE GRAPH //
                /* TAB 3: Revenew  */

                $(function () {

                    var trgt = [[1354586000000, 153], [1364587000000, 658], [1374588000000, 198], [1384589000000, 663], [1394590000000, 801], [1404591000000, 1080], [1414592000000, 353], [1424593000000, 749], [1434594000000, 523], [1444595000000, 258], [1454596000000, 688], [1464597000000, 364]], prft = [[1354586000000, 53], [1364587000000, 65], [1374588000000, 98], [1384589000000, 83], [1394590000000, 980], [1404591000000, 808], [1414592000000, 720], [1424593000000, 674], [1434594000000, 23], [1444595000000, 79], [1454596000000, 88], [1464597000000, 36]], sgnups = [[1354586000000, 647], [1364587000000, 435], [1374588000000, 784], [1384589000000, 346], [1394590000000, 487], [1404591000000, 463], [1414592000000, 479], [1424593000000, 236], [1434594000000, 843], [1444595000000, 657], [1454596000000, 241], [1464597000000, 341]], toggles = $("#rev-toggles"), target = $("#flotcontainer");

                    var data = [{
                        label: "Target Profit",
                        data: trgt,
                        bars: {
                            show: true,
                            align: "center",
                            barWidth: 30 * 30 * 60 * 1000 * 80
                        }
                    }, {
                        label: "Actual Profit",
                        data: prft,
                        color: '#3276B1',
                        lines: {
                            show: true,
                            lineWidth: 3
                        },
                        points: {
                            show: true
                        }
                    }, {
                        label: "Actual Signups",
                        data: sgnups,
                        color: '#71843F',
                        lines: {
                            show: true,
                            lineWidth: 1
                        },
                        points: {
                            show: true
                        }
                    }]

                    var options = {
                        grid: {
                            hoverable: true
                        },
                        tooltip: true,
                        tooltipOpts: {
                            //content: '%x - %y',
                            //dateFormat: '%b %y',
                            defaultTheme: false
                        },
                        xaxis: {
                            mode: "time"
                        },
                        yaxes: {
                            tickFormatter: function (val, axis) {
                                return "$" + val;
                            },
                            max: 1200
                        }

                    };

                    plot2 = null;

                    function plotNow() {
                        var d = [];
                        toggles.find(':checkbox').each(function () {
                            if ($(this).is(':checked')) {
                                d.push(data[$(this).attr("name").substr(4, 1)]);
                            }
                        });
                        if (d.length > 0) {
                            if (plot2) {
                                plot2.setData(d);
                                plot2.draw();
                            } else {
                                plot2 = $.plot(target, d, options);
                            }
                        }

                    };

                    toggles.find(':checkbox').on('change', function () {
                        plotNow();
                    });
                    plotNow()

                });

                /*
                 * VECTOR MAP
                 */

                data_array = {
                    "US": 4977,
                    "AU": 4873,
                    "IN": 3671,
                    "BR": 2476,
                    "TR": 1476,
                    "CN": 146,
                    "CA": 134,
                    "BD": 100
                };

                $('#vector-map').vectorMap({
                    map: 'world_mill_en',
                    backgroundColor: '#fff',
                    regionStyle: {
                        initial: {
                            fill: '#c4c4c4'
                        },
                        hover: {
                            "fill-opacity": 1
                        }
                    },
                    series: {
                        regions: [{
                            values: data_array,
                            scale: ['#85a8b6', '#4d7686'],
                            normalizeFunction: 'polynomial'
                        }]
                    },
                    onRegionLabelShow: function (e, el, code) {
                        if (typeof data_array[code] == 'undefined') {
                            e.preventDefault();
                        } else {
                            var countrylbl = data_array[code];
                            el.html(el.html() + ': ' + countrylbl + ' visits');
                        }
                    }
                });

                /*
                 * FULL CALENDAR JS
                 */

                if ($("#calendar").length) {
                    var date = new Date();
                    var d = date.getDate();
                    var m = date.getMonth();
                    var y = date.getFullYear();

                    var calendar = $('#calendar').fullCalendar({

                        editable: false,
                        draggable: false,
                        selectable: false,
                        selectHelper: false,
                        unselectAuto: false,
                        disableResizing: false,

                        header: {
                            left: 'title', //,today
                            center: 'prev, next, today',
                            right: 'month, agendaWeek, agenDay' //month, agendaDay,
                        },

                        select: function (start, end, allDay) {
                            var title = prompt('Event Title:');
                            if (title) {
                                calendar.fullCalendar('renderEvent', {
                                    title: title,
                                    start: start,
                                    end: end,
                                    allDay: allDay
                                }, true // make the event "stick"
                                );
                            }
                            calendar.fullCalendar('unselect');
                        },

                        eventRender: function (event, element, icon) {
                            if (!event.description == "") {
                                element.find('.fc-event-title').append("<br/><span class='ultra-light'>" + event.description + "</span>");
                            }
                            if (!event.icon == "") {
                                element.find('.fc-event-title').append("<i class='air air-top-right fa " + event.icon + " '></i>");
                            }
                        }
                    });

                };

                /* hide default buttons */
                $('.fc-header-right, .fc-header-center').hide();

                // calendar prev
                $('#calendar-buttons #btn-prev').click(function () {
                    $('.fc-button-prev').click();
                    return false;
                });

                // calendar next
                $('#calendar-buttons #btn-next').click(function () {
                    $('.fc-button-next').click();
                    return false;
                });

                // calendar today
                $('#calendar-buttons #btn-today').click(function () {
                    $('.fc-button-today').click();
                    return false;
                });

                // calendar month
                $('#mt').click(function () {
                    $('#calendar').fullCalendar('changeView', 'month');
                });

                // calendar agenda week
                $('#ag').click(function () {
                    $('#calendar').fullCalendar('changeView', 'agendaWeek');
                });

                // calendar agenda day
                $('#td').click(function () {
                    $('#calendar').fullCalendar('changeView', 'agendaDay');
                });

            });

    </script>
}