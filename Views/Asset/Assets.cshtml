<div id="content">
    <div class="row ">
        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
            <h1 class="page-title txt-color-blueDark">
                <i class="fa-fw fa fa-th"></i>
                Assets<span>
                    >
                    Loaded Assets
                </span>
            </h1>
        </div>

        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6 text-align-right">
            <div class="page-title">
                <a href="~/Asset/CreateAsset" class="btn btn-primary" id="uploadBtn"><i class="fa fa-plus-square-o"></i> New Asset</a>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">

            <table id="dt_assets" class="table table-striped table-bordered table-hover" style="display:none;" width="100%">
                <thead>
                    <tr>
                        <th data-hide="expand" style="width:20px;"><i class="fa fa-fw fa-heart-o txt-color-blue hidden-md hidden-sm hidden-xs"></i></th>
                        <th data-class="expand"><i class="fa fa-fw fa-pencil-square-o txt-color-blue hidden-md hidden-sm hidden-xs"></i> Description</th>
                        <th data-class="expand"><i class="fa fa-fw fa-picture-o txt-color-blue hidden-md hidden-sm hidden-xs"></i> Asset Type</th>
                        <th data-class="expand"><i class="fa fa-fw fa-calendar txt-color-blue hidden-md hidden-sm hidden-xs"></i> Previous</th>
                        <th data-hide="phone,tablet"><i class="fa fa-fw fa-calendar txt-color-blue hidden-md hidden-sm hidden-xs"></i> Next</th>
                        <th><i class="fa fa-fw fa-cogs txt-color-blue hidden-md hidden-sm hidden-xs"></i> Options</th>
                    </tr>
                </thead>
                <tbody></tbody>

            </table>
            <img id="adbloader" src="~/content/img/adb_img/adb_loader.gif" />
        </div>
    </div>

    @{
        Html.RenderPartial("_MapView");
    }

</div>
@section pagespecific{
    <script src="~/scripts/plugin/datatables/jquery.dataTables.min.js"></script>
    <script src="~/scripts/plugin/datatables/dataTables.colVis.min.js"></script>
    <script src="~/scripts/plugin/datatables/dataTables.tableTools.min.js"></script>
    <script src="~/scripts/plugin/datatables/dataTables.bootstrap.min.js"></script>
    <script src="~/scripts/plugin/datatable-responsive/datatables.responsive.min.js"></script>

    <!--Google Maps-->
    <script type="text/javascript"
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyClaJpRNTFn0RCIn16khYbhiCxChMdzzyA&sensor=true&libraries=visualization&v=3">
    </script>

    <script type="text/javascript">
        //Global Variables
        var responsiveHelper_dt_basic = null;
        var $assetClassTbl = $('#dt_assets');
        var Assets = new AllAssets();
        var markers = [];
        var size = 500;
        var map;

        var breakpointDefinition = {
            tablet: 1024,
            phone: 480
        };

        //Functions
        function setDataTable() {
            $assetClassTbl.dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (responsiveHelper_dt_basic === null) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($assetClassTbl, breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });
        }

        function AllAssets() {
            this.jsonData = {};
        }

        function clearAllMarkers() {
            if (markers != null) {
                for (var i = 0; i < markers.length; i++) {
                    markers[i].setMap(null);
                }
            }
            markers = null;
        }

        function requestAllAssetData() {
            $.ajax({
                url: '../../Map/getAllAssets',
                type: 'post',
                dataType: 'json',
                success: function (json) {
                    Assets.jsonData = json;

                    $.each(json, function (i, v) {
                        var cycle = "";
                        var color = "";
                        if (v.maintenance[0].maintenanceCycle === 0) cycle = "btn-primary";
                        else if (v.maintenance[0].maintenanceCycle === 1) cycle = "bg-color-green";
                        else if (v.maintenance[0].maintenanceCycle === 2) cycle = "bg-color-yellow";
                        else if (v.maintenance[0].maintenanceCycle === 3) cycle = "bg-color-orange"
                        else if (v.maintenance[0].maintenanceCycle === 4) { cycle = "bg-color-red"; color = "danger"; }



                        var html = "";
                        html += '<tr class="' + color +'" id="asset_' + v.assetId + '" data-arr-index="' + i + '"><td><a href="#" class="btn ' + cycle + '" style="width:100%;"></a></td>';
                        html += '<td><a href="../../AssetClass/EditAssetClass/' + v.assetClass.assetClassId + '">' + v.assetClass.description + '</a></td>';
                        html += '<td><img src="../..' + v.picture.fileLocation + '" style="height:50px; width:auto;"/></td>';
                        html += '<td>' + v.maintenance[0].previousDate + '</td><td>' + v.maintenance[0].nextDate + '</td>';
                        html += '<td style="line-height:2;"><a href="#" class="btn btn-info btn-xs" onclick="showAssetLocation(' + v.assetId + ',' + v.location.latitude + ',' + v.location.longitude + ',' + v.maintenanceCycle + ')"><i class="fa fa-map-marker"></i> Location</a></td></tr>';

                        //Append to DOM
                        $('#dt_assets tbody').append(html);
                    });

                    $('#adbloader').fadeOut(500);
                    setDataTable();
                    var table = $('#dt_assets').DataTable();
                    table.columns.adjust().draw();
                    $('#dt_assets').fadeIn(500);

                    //Set Sparklines
                    $('.sparkline').sparkline('html', { type: 'bullet' });
                }
            });
        }

        function initMap() {
            $.ajax({
                url: '../../Map/getMapCenter',
                type: 'post',
                dataType: 'json',
                success: function (json) {
                    centerLat = json[0];
                    centerLong = json[1];

                    var zoom = 15;
                    if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
                        zoom = 14;
                    }
                    var mapOptions = {
                        center: new google.maps.LatLng(json[0], json[1]),
                        zoom: zoom,
                        disableDefaultUI: true,
                        mapTypeId: google.maps.MapTypeId.SATELLITE
                    };

                    map = new google.maps.Map(document.getElementById("map-canvas"),
                        mapOptions);
                }
            });
        }

        $(document).ready(function () {
            requestAllAssetData();
            initMap();
            $('#mapModal').on('shown.bs.modal', function () {

                google.maps.event.trigger(map, "resize");
            });
        });

        function findAssetJson(id)
        {
            var json, flag;
            flag = false;
            $.each(Assets.jsonData, function (i, v) {
                if (v.assetId === id && !flag) {
                    json = v;
                    flag = true;
                }
            });

            return json;
        }

        function showAssetLocation(id, lat, long, maintain) {
            map.panTo(new google.maps.LatLng(lat, long));

            clearAllMarkers();
            markers = [];
                var latLongMarker = new google.maps.LatLng(lat, long);
                var image = getImage(1);
                var marker = new google.maps.Marker({
                    map: map,
                    position: latLongMarker,
                    title: id.toString(),
                    icon: image
                });

            //Generate Info Window Content
                //var json = findAssetJson(id);
                //var content = markerInfo(json);

                //google.maps.event.addListener(marker, 'click', function () {
                //    if (infowindow) infowindow.close();
                //    infowindow = new google.maps.InfoWindow({ content: content });
                //    infowindow.open(map, marker);
            //});

                markers.push(marker);

            $('#mapModal').modal('show');
        }

        function getImage(value) {
            var image;
            switch (value) {
                case 0: image = '/images/icons/map_icon_grey.png';
                    break;
                case 1: image = '/images/icons/map_icon_green.png';
                    break;
                case 2: image = '/images/icons/map_icon_yellow.png';
                    break;
                case 3: image = '/images/icons/map_icon_orange.png';
                    break;
                case 4: image = '/images/icons/map_icon_red.png';
                    break;

                default:
                    break;
            }

            return image;
        }

        function markerInfo(json) {

            var previousDate, nextDate, cycle;
            $.each(json.maintenance, function (i, v) {
                //***TODO Change this
                if (v.maintenanceId === 1) {
                    previousDate = v.previousDate;
                    nextDate = v.nextDate;
                    cycle = v.maintenanceCycle;
                }
            });

            //Header
            var content = '<div class="mapInfo" style="width:300px;"><h3 class="header smaller lighter blue">' + json.rfidTag + '<small> - (' + json.serialNumber + ')</small></h3>';

            //Image of Asset
            content += '<div style="width:100%; text-align:center;"><img src="' + json.picture.fileLocation + '"/></div><hr/>';
            content += "<h5 class='txt-color-blue'>Summary</h4>"
            content += "Maintenance Status: " + getMaintenanceStatus(cycle) + "<br />";
            content += "Previous Date: <strong>" + previousDate + "</strong><br />";
            content += "Next Date: <strong>" + nextDate + "</strong><br />";
            content += "Asset Type: <strong>" + json.assetClass.description + "</strong><br />";
            content += "<br/><a class='btn btn-sm btn-success' href='../../History/AssetHistory?id=" + json.assetId.toString() + "'><i class='fa fa-clock-o'></i> History</a><br />";

            content += "</ul>";
            content += '<hr/>';
            if (json.status === true) {
                content += '<form class="smart-form"><label class="toggle"><input type="checkbox" name="faultyLightToggle" checked="checked"><i data-swchon-text="ON" data-swchoff-text="OFF"></i>Light Faulty</label></form>';
            }
            //End
            content += '</div>';

            return content;
        }
    </script>
}