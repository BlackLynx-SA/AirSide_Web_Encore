@using AirSide.ServerModules.Models
<!-- MAIN CONTENT -->
<style type="text/css">
    #mapTopMenuBack {
        background-color: #000;
        opacity: 0.7;
        height: 70px;
        position: absolute;
        z-index: 3;
    }

    #mapMenuItems {
        position: absolute;
        z-index: 4;
        height: 70px;
        line-height: 64px;
        margin-left: 10px;
    }
</style>

<div id="content">
    <div id="mapTopMenuBack">
        <br />
        <img src="~/Content/img/adb_img/adb_loader_tr.GIF" id="mapLoader" style="zoom:0.3;"/>
    </div>

    <div id="mapMenuItems" style="display:none;">
        @* Asset Filter Buttons *@
        <button type="button" class="btn btn-success assetFilterBtn hidden-md hidden-lg">
            <i class="fa fa-lightbulb-o"></i>
        </button>
        <button type="button" class="btn btn-labeled btn-success hidden-sm hidden-xs assetFilterBtn">
            <span class="btn-label">
                <i class="fa fa-lightbulb-o"></i>
            </span>
            @Resources.Language.Assets
        </button>

        @* Area Filter Buttons *@
        <button type="button" class="btn btn-primary hidden-md hidden-lg areaFilterBtn">
            <i class="fa fa-road "></i>
        </button>
        <button type="button" class="btn btn-labeled btn-primary hidden-sm hidden-xs areaFilterBtn">
            <span class="btn-label">
                <i class="fa fa-road"></i>
            </span>
            @Resources.Language.Areas
        </button>

        @* Visual Surveyor Buttons *@
        <button type="button" class="btn btn-warning hidden-md hidden-lg surveyorBtn">
            <i class="fa fa-eye"></i>
        </button>
        <button type="button" class="btn btn-labeled btn-warning hidden-sm hidden-xs surveyorBtn">
            <span class="btn-label">
                <i class="fa fa-eye "></i>
            </span>
            Visual Surveyor&trade;
        </button>

        @* Photometric Buttons *@
        <button type="button" class="btn btn-danger hidden-md hidden-lg photoBtn">
            <i class="fa fa-sun-o "></i>
        </button>
        <button type="button" class="btn btn-labeled btn-danger hidden-sm hidden-xs photoBtn">
            <span class="btn-label">
                <i class="fa fa-sun-o "></i>
            </span>
            @Resources.Language.Photometric
        </button>

        @* AutoCAD Buttons *@
        @*<button type="button" class="btn btn-info hidden-lg autoCadBtn">
            <i class="fa fa-picture-o "></i>
        </button>
        <button type="button" class="btn btn-labeled btn-info hidden-sm hidden-xs hidden-md autoCadBtn">
            <span class="btn-label">
                <i class="fa fa-picture-o "></i>
            </span>
            AutoCAD
        </button>*@

        @* Shifts Buttons *@
        <div class="btn-group  hidden-lg">
            <button type="button" class="btn btn-success dropdown-toggle" data-toggle="dropdown">
                <i class="fa fa-calendar "></i> <i class="fa fa-caret-down"></i>
            </button>
            <ul class="dropdown-menu">
                <li><a href="#" onclick="showRectangle();">@Resources.Language.Show_Hide_Selector</a></li>
                <li class="disabled createShift"><a href="#" onclick="getSelectedAssets();">@Resources.Language.Create_Shift</a></li>
            </ul>
        </div>
        <div class="btn-group hidden-sm hidden-xs hidden-md">
            <button type="button" class="btn btn-labeled btn-success dropdown-toggle" data-toggle="dropdown">
                <span class="btn-label">
                    <i class="fa fa-calendar "></i>
                </span>
                @Resources.Language.Shifts <i class="fa fa-caret-down"></i>
            </button>
            <ul class="dropdown-menu">
                <li><a href="#" onclick="showRectangle();">@Resources.Language.Show_Hide_Selector</a></li>
                <li class="disabled createShift"><a href="#" onclick="getSelectedAssets();">@Resources.Language.Create_Shift</a></li>
            </ul>
        </div>

        @*Maintenance Task Buttons*@
        @* Map Type Buttons *@
        <div class="btn-group  hidden-lg">
            <button type="button" class="btn btn-primary dropdown-toggle maintenanceBtn" data-toggle="dropdown">
                <i class="fa fa-wrench"></i> <i class="fa fa-caret-down"></i>
            </button>
            <ul class="dropdown-menu">
                @foreach (var prod in (List<as_maintenanceProfile>)ViewData["maintenanceTasks"])
                {
                    <li><a href="#" onclick="setTask(@prod.i_maintenanceId, '@prod.vc_description');">@prod.vc_description</a></li>
                }
            </ul>

        </div>
        <div class="btn-group hidden-sm hidden-xs hidden-md">
            <button type="button" class="btn btn-labeled btn-primary dropdown-toggle maintenanceBtn" data-toggle="dropdown">
                <span class="btn-label">
                    <i class="fa fa-wrench "></i>
                </span>
                <span id="taskLabel">@ViewBag.taskDesc</span> <i class="fa fa-caret-down"></i>
            </button>
            <ul class="dropdown-menu">
                @foreach (var prod in (List<as_maintenanceProfile>)ViewData["maintenanceTasks"])
                {
                    <li><a href="#" onclick="setTask(@prod.i_maintenanceId, '@prod.vc_description');">@prod.vc_description</a></li>
                }
            </ul>
        </div>

        @* Map Type Buttons *@
        <div class="btn-group  hidden-lg">
            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                <i class="fa fa-map-marker"></i> <i class="fa fa-caret-down"></i>
            </button>
            <ul class="dropdown-menu">
                <li><a href="#" onclick="changeMap('Hybrid');">Hybrid</a></li>
                <li><a href="#" onclick="changeMap('Satellite');">Satellite</a></li>
                <li><a href="#" onclick="changeMap('Roadmap');">Road Map</a></li>
                <li><a href="#" onclick="changeMap('Terrain');">Terrain</a></li>
            </ul>
        </div>
        <div class="btn-group hidden-sm hidden-xs hidden-md">
            <button type="button" class="btn btn-labeled btn-default dropdown-toggle" data-toggle="dropdown">
                <span class="btn-label">
                    <i class="fa fa-map-marker "></i>
                </span>
                @Resources.Language.Map_Type <i class="fa fa-caret-down"></i>
            </button>
            <ul class="dropdown-menu">
                <li><a href="#" onclick="changeMap('Hybrid');">@Resources.Language.Hybrid</a></li>
                <li><a href="#" onclick="changeMap('Satellite');">@Resources.Language.Satellite</a></li>
                <li><a href="#" onclick="changeMap('Roadmap');">@Resources.Language.Road_Map</a></li>
                <li><a href="#" onclick="changeMap('Terrain');">@Resources.Language.Terrain</a></li>
            </ul>
        </div>
    </div>

    <div id="map-canvas" class="google_maps" style="height:500px; width:100%;">
        &nbsp;
    </div>
</div>

@{
    //Render Partials for all modal windows
    Html.RenderPartial("_AssetFilter");
    Html.RenderPartial("_AreaFilter");
    Html.RenderPartial("_VisualSurveyor");
    Html.RenderPartial("_Photometric");
    Html.RenderPartial("_ShiftCreate");
}


@{
    var src = "https://maps.googleapis.com/maps/api/js?key=AIzaSyClaJpRNTFn0RCIn16khYbhiCxChMdzzyA&libraries=visualization&language=";
    if (Request.Cookies["_culture"] != null)
    {
        var culture = Request.Cookies["_culture"].Value;
        src += culture;
    }
    else
    {
        src += "en";
    }
}

@section pagespecific{
    <script type="text/javascript" src="@src"></script>
    
    <script src="~/Scripts/TypeScripts/Map/GeoInfo.js"></script>

    <script src="~/scripts/plugin/bootstrap-timepicker/bootstrap-timepicker.min.js"></script>
    
    <script src="~/Scripts/TypeScripts/Components/ComponentsHelper.js"></script>

    @Scripts.Render("~/scripts/googlemaps")

    <script src="~/Scripts/TypeScripts/Map/AirPortMap.js"></script>

    <script>
        $('#searchHeader').show();

        function markerInfo(json) {

            var previousDate, nextDate, cycle;

            if (selectedTask !== 0) {
                $.each(json.maintenance, function(i, v) {
                    if (v.maintenanceId === selectedTask) {
                        previousDate = v.previousDate;
                        nextDate = v.nextDate;
                        cycle = v.maintenanceCycle;
                    }
                });
            } else {
                var v = json.maintenance[0];
                previousDate = v.previousDate;
                nextDate = v.nextDate;
                cycle = v.maintenanceCycle;
            }

            //Header
            var content = '<div class="mapInfo" style="width:300px;"><h3 class="header smaller lighter blue">' + json.serialNumber + '<small> - (' + json.rfidTag + ')</small></h3>';

            //Image of Asset
            content += '<div style="width:100%; text-align:center;"><img src="' + json.picture.fileLocation + '"/></div><hr/>';
            content += "<h5 class='txt-color-blue'>Summary</h4>"
            content += "@Resources.Language.Maintenance_Status: " + getMaintenanceStatus(cycle) + "<br />";
            content += "@Resources.Language.Previous: <strong>" + previousDate + "</strong><br />";
            content += "@Resources.Language.Next: <strong>" + nextDate + "</strong><br />";
            content += "@Resources.Language.Asset_Types: <strong>" + json.assetClass.description + "</strong><br />";
            if (selectedTask === 0)
                content += "@Resources.Language.Maintenance_Task: <strong>" + json.maintenance[0].maintenanceTask + "</strong><br />";
            content += "<br/><hr/><a class='btn btn-sm btn-success' href='../../History/AssetHistory?id=" + json.assetId.toString() + "'><i class='fa fa-clock-o'></i> @Resources.Language.History</a>";
            content += "<a class='btn btn-sm btn-primary margin-left-5' href='" + json.productUrl + "' target='_blank'><i class='fa fa-book'></i> @Resources.Language.Manual</a><br />";

            content += "</ul>";
            content += '<hr/>';
            if (json.status === true) {
                content += '<form class="smart-form"><label class="toggle"><input class="faultyLightToggle" type="checkbox" name="faultyLightToggle" data-asset-id="' + json.assetId + '_faultyToggle" checked="checked"><i data-swchon-text="ON" data-swchoff-text="OFF"></i>@Resources.Language.Light_Faulty</label></form>';
            } else {
                content += '<form class="smart-form"><label class="toggle"><input class="faultyLightToggle" type="checkbox" name="faultyLightToggle" data-asset-id="' + json.assetId + '_faultyToggle"><i data-swchon-text="ON" data-swchoff-text="OFF"></i>@Resources.Language.Light_Faulty</label></form>';
            }
            //End
            content += '</div>';

            return content;
        }

        function getMaintenanceStatus(status) {
            var img;
            switch (status) {
                case 0:
                    img = "<span class='txt-color-blue'><i class='fa fa-exclamation-triangle'></i> @Resources.Language.No_Data</span>";
                    break;
                case 1:
                    img = "<span class='txt-color-green'><i class='fa fa-thumbs-o-up'></i> @Resources.Language.Recently_Updated</span>";
                    break;
                case 2:
                    img = "<span class='txt-color-yellow'><i class='fa fa-ellipsis-h'></i> @Resources.Language.Mid_Cycle</span>";
                    break;
                case 3:
                    img = "<span class='txt-color-orange'><i class='fa fa-bell icon-animated-bell'></i> @Resources.Language.Almost_Due</span>";
                    break;
                case 4:
                    img = "<span class='txt-color-red'><i class='fa fa-thumbs-o-down'></i> @Resources.Language.Over_Due</span>";
                    break;
                default:
                    break;
            }

            return img
        }

        function markerInfoForMultiAsset(json) {
            var content = '<div class="mapInfo" style="width:300px;"><h3 class="header smaller lighter blue"><li class="fa fa-list"></li> @Resources.Language.Multi_Asset<small> - (' + json.rfidTag + ')</small></h3><hr/>';
            getMultiAssets(json.assetId).forEach(function (c) {
                var asset = getAsset(c);
                content += '<h5><img src="' + getImage(json.maintenance, json.status) + '"/> ' + asset.serialNumber + ' ( ' + asset.rfidTag + ')</h5>';
            });
            content += '</div>';
            return content;
        }

    </script>

}